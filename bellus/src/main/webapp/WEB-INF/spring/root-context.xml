<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<!-- config 파일 자동 로드 /는 webapp임  -->
	<context:property-placeholder location="/config/*.properties"/>	
	
	<!-- config 파일을 자동로드하고 파일의 내용을 Bean에 등록하면 컨트롤러에서도 사용가능 -->
	<util:properties id="uploadPath" location="/config/uploadPath.properties"></util:properties>
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="${spring.datasource.driverClassName}" />
			<property name="url" value="${spring.datasource.url}" />
			<property name="username" value="${spring.datasource.username}" />
			<property name="password" value="${spring.datasource.password}" />
	</bean>
	
	 <!-- Mybatis에서 SqlSession을 사용하기위한 SqlSessionFactory 객체 생성 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- classpath: -> src/main/resources 위치를 찾는다. -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>	
        <!-- DB에서 실행할 sql 문장을 태그로 정의해 놓는다. -->
        <property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml"/>
    </bean>
 
    <!-- SqlSession 객체를 sqlSessionFactory 객체를 사용하여 생성 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>	
    


</beans>
